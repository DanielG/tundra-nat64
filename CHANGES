[1.0.0 @ 2022-04-18]
- Initial release

[1.0.1 @ 2022-04-19]
- GCC fixes

[1.0.2 @ 2022-04-20]
- The translator now drops IGMP packets and allows ESP packets to pass through (as per RFC 7915)
- When translating IP packets "in error" embedded in ICMPv4/v6 messages, illegal IP addresses inside them are now allowed (for debugging purposes)

[1.0.3 @ 2022-04-22]
- Improved the translation algorithms of ICMP "Packet Too Big" messages
- Added an algorithm to estimate a likely MTU ("plateau MTU"; as per RFC 1191) when translating ICMP "Packet Too Big" messages
- Added code comments which describe the state the translator's packet buffers need to be in when a function accessing them is called
- Other minor improvements

[1.0.4 @ 2022-04-23]
- Slightly optimized the RFC 1071 checksum calculation algorithm

[1.0.5 @ 2022-04-23]
- The problematic strerror_r() function is no longer used by the program's logging subsystem

[1.0.6 @ 2022-04-25]
- Slightly optimized the RFC 1071 checksum calculation algorithm
- TUN interfaces are no longer initialized as multi-queue if Tundra is configured to have only one translator thread, which significantly reduces memory usage

[1.1.0 @ 2022-04-27]
- Reworked the checksum calculation subsystem
- Checksums of TCP and UDP packets are now incrementally updated -> speed improvement

[1.1.1 @ 2022-04-28]
- Reorganized some parts of the program's code

[1.1.2 @ 2022-05-02]
- TCP/UDP checksums within fragmented TCP/UDP packets are now incrementally recalculated, allowing them to pass through the translator without being "damaged" by it

[1.1.3 @ 2022-05-09]
- Added a note to Tundra's '--help' that the program's configuration may be loaded from standard input
- The program does not check if lines in the configuration file are too long anymore, as the check made it impossible to load config files not ending with a new-line character

[2.0.0 @ 2022-05-10]
- Tundra can now act as a CLAT translator
- Changed size_t to ssize_t in relevant places
